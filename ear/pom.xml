<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.sing_group</groupId>
    <artifactId>mtc</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>
  <artifactId>mtc-ear</artifactId>
  <packaging>ear</packaging>

  <name>EAR</name>
  <description>MultiTasking Cubes - EAR</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>mtc-domain</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>mtc-service</artifactId>
      <version>${project.version}</version>
      <type>ejb</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>mtc-rest</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.sing_group</groupId>
      <artifactId>fluent-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <configuration>
          <applicationId>mtc</applicationId>
          <applicationName>Java EE</applicationName>
          <displayName>Java EE</displayName>
          <earName>${project.parent.artifactId}-${project.version}</earName>
          <defaultLibBundleDir>lib/</defaultLibBundleDir>
          <skinnyWars>true</skinnyWars>
          <modules>
            <webModule>
              <groupId>${project.groupId}</groupId>
              <artifactId>mtc-rest</artifactId>
              <contextRoot>/mtc/rest</contextRoot>
            </webModule>
          </modules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
          <filename>${project.parent.artifactId}-${project.version}.${project.packaging}</filename>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>wildfly-mysql-run</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-mysql-for-execution</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>mysql</groupId>
                      <artifactId>mysql-connector-java</artifactId>
                      <type>jar</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                      <destFileName>mysql-connector-java-${mysql.connector.java.version}.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <configuration>
              <version>${wildfly.version}</version>
              <before-deployment>
                <batch />
                <commands>
                  <command>deploy
                    ${project.build.directory}/mysql-connector-java-${mysql.connector.java.version}.jar</command>
                  <command>data-source add
                    --jndi-name=java:jboss/datasources/mtc
                    --name=mtc-mysql
                    --jta=true --use-ccm=true
                    --connection-url=jdbc:mysql://localhost:3306/mtc?useUnicode=yes&amp;characterEncoding=UTF-8
                    --driver-name=mysql-connector-java-${mysql.connector.java.version}.jar
                    --driver-class=com.mysql.jdbc.Driver --user-name=mtc
                    --password=mtcpass</command>
                  <command>/core-service=management/security-realm=RemotingRealm:add</command>
                  <command>/core-service=management/security-realm=RemotingRealm/authentication=jaas:add(name="AppRealmLoopThrough")</command>
                  <command>/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name="security-realm",
                    value="RemotingRealm")</command>
                  <command>/subsystem=security/security-domain=AppRealmLoopThrough:add(cache-type=default)</command>
                  <command>/subsystem=security/security-domain=AppRealmLoopThrough/authentication=classic:add(login-modules=[{"code"=&gt;"Client",
                    "flag" =&gt; "required", "module-options" =&gt;
                    [("multi-threaded" =&gt; "true")]}])</command>
                  <command>/subsystem=security/security-domain=mtc-security-domain:add</command>
                  <command>/subsystem=security/security-domain=mtc-security-domain/authentication=classic:add(
                    login-modules=[{
                    "code"=&gt;"Database",
                    "flag" =&gt; "required",
                    "module-options" =&gt; [
                    ("dsJndiName" =&gt; "java:jboss/datasources/mtc"),
                    ("principalsQuery" =&gt; "SELECT password FROM user WHERE login=?"),
                    ("rolesQuery" =&gt; "SELECT role, 'Roles' FROM user
                    WHERE login=?"),
                    ("hashAlgorithm" =&gt; "MD5"),
                    ("hashEncoding" =&gt; "hex"),
                    ("ignorePasswordCase" =&gt; "true")]
                    }]
                    )
                  </command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/version:add(
                    binding-type=simple, type=java.lang.String, value=${project.version}
                  )</command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/schemes:add(binding-type=simple,
                    type=java.lang.String, value=http)</command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/host:add(
                    binding-type=simple, type=java.lang.String, value=localhost:8080
                  )</command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/basePath:add(
                    binding-type=simple, type=java.lang.String, value=mtc\/rest\/api
                  )</command>
                </commands>
              </before-deployment>
              <after-deployment>
                <commands>
                  <command>:reload</command>
                </commands>
              </after-deployment>
              <add-user>
                <users>
                  <user>
                    <username>wildfly-admin</username>
                    <password>mtcadmin</password>
                    <applicationUser>false</applicationUser>
                  </user>
                </users>
              </add-user>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>wildfly10-mysql-run</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-mysql-for-execution</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>mysql</groupId>
                      <artifactId>mysql-connector-java</artifactId>
                      <type>jar</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                      <destFileName>mysql-connector-java-${mysql.connector.java.version}.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <configuration>
              <version>${wildfly10.version}</version>
              <before-deployment>
                <batch />
                <commands>
                  <command>deploy
                    ${project.build.directory}/mysql-connector-java-${mysql.connector.java.version}.jar</command>
                  <command>data-source add
                    --jndi-name=java:jboss/datasources/mtc
                    --name=mtc-mysql
                    --jta=true --use-ccm=true
                    --enabled=true
                    --connection-url=jdbc:mysql://localhost:3306/mtc?useUnicode=yes&amp;characterEncoding=UTF-8
                    --driver-name=mysql-connector-java-${mysql.connector.java.version}.jar
                    --driver-class=com.mysql.jdbc.Driver --user-name=mtc
                    --password=mtcpass</command>
                  <command>/core-service=management/security-realm=RemotingRealm:add</command>
                  <command>/core-service=management/security-realm=RemotingRealm/authentication=jaas:add(name="AppRealmLoopThrough")</command>
                  <command>/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name="security-realm",
                    value="RemotingRealm")</command>
                  <command>/subsystem=security/security-domain=AppRealmLoopThrough:add(cache-type=default)</command>
                  <command>/subsystem=security/security-domain=AppRealmLoopThrough/authentication=classic:add(login-modules=[{"code"=&gt;"Client",
                    "flag" =&gt; "required", "module-options" =&gt;
                    [("multi-threaded" =&gt; "true")]}])</command>
                  <command>/subsystem=security/security-domain=mtc-security-domain:add</command>
                  <command>/subsystem=security/security-domain=mtc-security-domain/authentication=classic:add(
                    login-modules=[{
                    "code"=&gt;"Database",
                    "flag" =&gt; "required",
                    "module-options" =&gt; [
                    ("dsJndiName" =&gt; "java:jboss/datasources/mtc"),
                    ("principalsQuery" =&gt; "SELECT password FROM user WHERE login=?"),
                    ("rolesQuery" =&gt; "SELECT role, 'Roles' FROM user WHERE login=?"),
                    ("hashAlgorithm" =&gt; "MD5"),
                    ("hashEncoding" =&gt; "hex"),
                    ("ignorePasswordCase" =&gt; "true")]
                    }]
                    )
                  </command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/version:add(
                    binding-type=simple, type=java.lang.String, value=${project.version}
                  )</command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/schemes:add(binding-type=simple,
                    type=java.lang.String, value=http)</command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/host:add(
                    binding-type=simple, type=java.lang.String, value=localhost:8080
                  )</command>
                  <command>/subsystem=naming/binding=java\:global\/mtc\/swagger\/basePath:add(
                    binding-type=simple, type=java.lang.String, value=mtc\/rest\/api
                  )</command>
                </commands>
              </before-deployment>
              <after-deployment>
                <commands>
                  <command>:reload</command>
                </commands>
              </after-deployment>
              <add-user>
                <users>
                  <user>
                    <username>wildfly-admin</username>
                    <password>mtcadmin</password>
                    <applicationUser>false</applicationUser>
                  </user>
                </users>
              </add-user>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
